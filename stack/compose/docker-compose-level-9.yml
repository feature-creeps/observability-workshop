version: '3.7'
services:

  ## Domain
  frontend:
    build: ../application/frontend
    depends_on:
      - fluentbit
    ports:
      - 80:80
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
    restart: on-failure

  imageorchestrator:
    build:
      context: ../application
      args:
        SERVICE: imageorchestrator
    depends_on:
      - fluentbit
    ports:
      - 8080:8080
    deploy:
      resources:
        limits:
          memory: 2g
    env_file:
      - .env
      - level_env_vars/base.env
      - level_env_vars/override_2.env
      - level_env_vars/override_3.env
      - level_env_vars/override_6.env
      - level_env_vars/override_8.env
      - level_env_vars/override_9.env
    environment:
      - HONEYCOMB_KEY=${HONEYCOMB_KEY}
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
    restart: on-failure

  imageholder:
    build:
      context: ../application
      args:
        SERVICE: imageholder
    depends_on:
      - mongodb
      - fluentbit
    ports:
      - 8081:8080
    deploy:
      resources:
        limits:
          memory: 1g
    env_file:
      - .env
      - level_env_vars/base.env
      - level_env_vars/override_2.env
      - level_env_vars/override_3.env
      - level_env_vars/override_6.env
      - level_env_vars/override_8.env
      - level_env_vars/override_9.env
    environment:
      - HONEYCOMB_KEY=${HONEYCOMB_KEY}
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
    restart: on-failure

  imagerotator:
    build:
      context: ../application
      args:
        SERVICE: imagerotator
    depends_on:
      - fluentbit
    ports:
      - 8082:8080
    deploy:
      resources:
        limits:
          memory: 2g
    env_file:
      - .env
      - level_env_vars/base.env
      - level_env_vars/override_2.env
      - level_env_vars/override_3.env
      - level_env_vars/override_6.env
      - level_env_vars/override_8.env
      - level_env_vars/override_9.env
    environment:
      - HONEYCOMB_KEY=${HONEYCOMB_KEY}
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
    restart: on-failure

  imagegrayscale:
    build:
      context: ../application
      args:
        SERVICE: imagegrayscale
    depends_on:
      - fluentbit
    ports:
      - 8083:8080
    deploy:
      resources:
        limits:
          memory: 2g
    env_file:
      - .env
      - level_env_vars/base.env
      - level_env_vars/override_2.env
      - level_env_vars/override_3.env
      - level_env_vars/override_6.env
      - level_env_vars/override_8.env
      - level_env_vars/override_9.env
    environment:
      - HONEYCOMB_KEY=${HONEYCOMB_KEY}
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
    restart: on-failure

  imageresize:
    build:
      context: ../application
      args:
        SERVICE: imageresize
    depends_on:
      - fluentbit
    ports:
      - 8084:8080
    deploy:
      resources:
        limits:
          memory: 2g
    env_file:
      - .env
      - level_env_vars/base.env
      - level_env_vars/override_2.env
      - level_env_vars/override_3.env
      - level_env_vars/override_6.env
      - level_env_vars/override_8.env
      - level_env_vars/override_9.env
    environment:
      - HONEYCOMB_KEY=${HONEYCOMB_KEY}
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
    restart: on-failure

  imageflip:
    build:
      context: ../application
      args:
        SERVICE: imageflip
    depends_on:
      - fluentbit
    ports:
      - 8085:8080
    deploy:
      resources:
        limits:
          memory: 2g
    env_file:
      - .env
      - level_env_vars/base.env
      - level_env_vars/override_2.env
      - level_env_vars/override_3.env
      - level_env_vars/override_6.env
      - level_env_vars/override_8.env
      - level_env_vars/override_9.env
    environment:
      - HONEYCOMB_KEY=${HONEYCOMB_KEY}
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
    restart: on-failure

  imagethumbnail:
    build:
      context: ../application
      args:
        SERVICE: imagethumbnail
    depends_on:
      - fluentbit
    ports:
      - 8080
    deploy:
      resources:
        limits:
          memory: 4g
    env_file:
      - .env
      - level_env_vars/base.env
      - level_env_vars/override_2.env
      - level_env_vars/override_3.env
      - level_env_vars/override_6.env
      - level_env_vars/override_8.env
      - level_env_vars/override_9.env
    environment:
      - HONEYCOMB_KEY=${HONEYCOMB_KEY}
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
    restart: on-failure

  traffic-gen:
    build: ../infrastructure/traffic-gen
    depends_on:
      - fluentbit
      - imageholder
      - imageorchestrator
    restart: on-failure
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224

  ## Storage

  # database
  mongodb:
    image: mongo:3.2.12

    # See https://github.com/docker-library/docs/tree/master/mongo#setting-wiredtiger-cache-size-limits
    command: "--wiredTigerCacheSizeGB 2"
    depends_on:
      - fluentbit
    ports:
      - '27017'
    volumes:
      - olly-mongodb:/data/db
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224

  mongodb-exporter:
    image: maibornwolff/mongodb_exporter
    ports:
      - 9001:9001
    command: '-mongodb.uri mongodb://mongodb:27017'

  ## Logging

  # log collector
  fluentbit:
    build: ../infrastructure/fluentbit
    # -v -vv -q -qq
    #command: -v
    depends_on:
      - elasticsearch
    volumes:
      - /var/lib/docker/containers/:/mnt/var/log/docker/containers/:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - "24224:24224"
      - "24224:24224/udp"

  loki:
    image: grafana/loki:$LOKI_VERSION
    ports:
      - 3100:3100
    command: -config.file=/etc/loki/local-config.yaml

  # search engine, storage
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.7.0
    container_name: elasticsearch
    env_file:
      - .elasticsearch.env
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - olly-elasticsearch:/usr/share/elasticsearch/data
    ports:
      - 9200:9200

  elasticsearch-exporter:
    image: justwatch/elasticsearch_exporter:1.0.2
    depends_on:
      - elasticsearch
    command:
      - '-es.uri=http://elasticsearch:9200'
    restart: always
    ports:
      - 9108:9108

  kibana-index:
    build: ../infrastructure/kibana-index
    depends_on:
      - kibana
      - elasticsearch
    environment:
      INDICES: "logs- events-"
    restart: on-failure

  # logs visualizer
  kibana:
    build: ../infrastructure/kibana
    depends_on:
      - elasticsearch
    volumes:
      - olly-prometheus:/prometheus
    ports:
      - 5601:5601

  apm-server:
    build: ../infrastructure/apm-server
    ports:
      - 8200:8200
    depends_on:
      - elasticsearch

  ## Monitoring

  # metricbeat
  metricbeat:
    build: ../infrastructure/metricbeat
    user: root
    volumes:
      - /proc:/hostfs/proc:ro
      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
      - /:/hostfs:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - olly-metricbeat:/usr/share/metricbeat/data
    env_file:
      - .metricbeat.env
    # disable strict permission checks
    command: ["--strict.perms=false", "-system.hostfs=/hostfs"]
    restart: on-failure
    depends_on:
      - kibana
      - elasticsearch


  heartbeat:
    build: ../infrastructure/heartbeat
    user: root
    # disable strict permission checks
    command: ["--strict.perms=false"]
    depends_on:
      - kibana
      - elasticsearch

  # metrics collector
  prometheus:
    build: ../infrastructure/prometheus
    ports:
      - 9090:9090

  # monitoring visualizer
  grafana:
    depends_on:
      - fluentbit
    ports:
      - 3000:3000
    build: ../infrastructure/grafana
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224

  # exporters
  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100

  cadvisor: # docker daemon metrics exporter
    image: google/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 9110:8080

  nginx-exporter:
    image: sophos/nginx-vts-exporter:latest
    environment:
      - NGINX_STATUS="http://localhost/status/format/json"

  ## Tracing

  # Trace UI
  zipkin:
    image: openzipkin/zipkin:2.17
    ports:
      - 9411:9411
    env_file:
      - .zipkin.env
    depends_on:
      - elasticsearch

  zipkin-dependencies:
    image: openzipkin/zipkin-dependencies
    ports:
      - 9412:9412
    env_file:
      - .zipkin.env
    restart: on-failure
    depends_on:
      - elasticsearch

volumes:
  olly-elasticsearch:
    driver: local
  olly-mongodb:
    driver: local
  olly-prometheus:
    driver: local
  olly-metricbeat:
    driver: local
