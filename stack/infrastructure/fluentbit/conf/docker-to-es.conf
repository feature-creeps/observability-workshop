[SERVICE]
    Flush        5
    Daemon       Off
    Log_Level    trace
    Parsers_File parsers_custom.conf


# receive all logs from docker via fluent-logdriver
# unfortunately there is no option to set the tag for the incoming events
# by default the tag is the container id which is a guid..
[INPUT]
    Name   forward
    Listen 0.0.0.0
    Port   24224

# ------------------------- docker.* tagging ------------------------- #
# we have to do this hack to prevent "endless loops" with the rewrite_tag
# plugin, as it would always match its own re-emitted records again and again

# add first_run=true if the key first_run does not exist yet
# that way it will match the  regex in the rewrite_tag plugin below
# and if will be tagged as docker.<container_name>
[FILTER]
    Name          modify
    Match         *
    Condition     Key_does_not_exist first_run
    Add           first_run true

# set the key first_run to false,
# if the tag was re-written to docker.* and re-emitted
# that way it will be skipped in the rewrite_tag below on the second run
# and go through with the tag docker.<container_name>
[FILTER]
    Name          modify
    Match         docker.*
    Set           first_run false

# rewrite tag of all incoming logs based on the container name
# CAUTION:  the rewrite_tag plugin will re-emit the whole record from the beginning of the pipeline
#           which also includes re-re-writing the tag if it matches again
[FILTER]
    Name            rewrite_tag
    Match           *
    Rule            $first_run "true" docker.$container_name false

# ------------------------- generic ------------------------- #

# rename log field to message field
[FILTER]
    Name          modify
    Match         docker.*
    Hard_copy     log message


# remove starting / from container name
[FILTER]
    Name            parser
    Match           docker.*
    Key_Name        container_name
    Parser          remove_slash_from_container_name
    Reserve_Data    true
    Preserve_Key    false

# write part of container name to service field
[FILTER]
    Name            parser
    Match           docker.*
    Key_Name        container_name
    Parser          service_from_container_name
    Reserve_Data    true
    Preserve_Key    false

# ------------------------- split container logs ------------------------- #

# rewrite tags based on service name
# resulting in tags: domain.<service>, mongodb, frontend
# CAUTION:  the rewrite_tag plugin will re-emit the whole record from the beginning of the pipeline
#           which also includes re-rewriting the tag if it matches
[FILTER]
    Name            rewrite_tag
    Match           docker.*
    Rule            $service "^(image.+)$" domain.any.$service false
    Rule            $service "^(mongodb|frontend)$" log.$service false

# ------------------------- handle domain service logs ------------------------- #
# parse log field as json
[FILTER]
    Name            parser
    Parser          message_as_json
    Match           domain.any.*
    Key_Name        message
    Reserve_Data    true
    Preserve_Key    false

# remove log field (it is either in message now or parsed)
[FILTER]
    Name          modify
    Match         domain.any.*
    Remove        log

# ------------------------- split domain services' events ------------------------- #

# reroute image* services' events to domain.event.<service>
# field logger_name is set to event in case of event, others are set to the class
# CAUTION:  the rewrite_tag plugin will re-emit the whole record from the beginning of the pipeline
#           which also includes re-rewriting the tag if it matches
[FILTER]
    Name            rewrite_tag
    Match           domain.any.*
    Rule            $logger_name "event" domain.event.$service false
    Rule            $logger_name ".*" domain.log.$service false


# just before the outputs, the first_run key is being removed
[FILTER]
    Name          modify
    Match         *
    Remove        first_run

[OUTPUT]
    Name                    es
    Match                   domain.log.*
    Host                    elasticsearch
    Port                    9200
    Type                    log
    HTTP_User               elastic
    HTTP_Passwd             changeme
    Logstash_Prefix         logs
    Logstash_Format         true
    Logstash_DateFormat     %Y.%m.%d
    Include_Tag_Key         true

[OUTPUT]
    Name                    es
    Match                   domain.event.*
    Host                    elasticsearch
    Port                    9200
    Type                    event
    HTTP_User               elastic
    HTTP_Passwd             changeme
    Logstash_Prefix         events
    Logstash_Format         true
    Logstash_DateFormat     %Y.%m.%d
    Include_Tag_Key         true

[OUTPUT]
    Name                    es
    Match                   *
    Host                    elasticsearch
    Port                    9200
    Type                    any
    HTTP_User               elastic
    HTTP_Passwd             changeme
    Logstash_Prefix         unmatched
    Logstash_Format         true
    Logstash_DateFormat     %Y.%m.%d
    Include_Tag_Key         true