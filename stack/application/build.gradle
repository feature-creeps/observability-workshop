plugins {
    id "io.spring.dependency-management" version "1.1.0"
    id "com.github.ben-manes.versions" version "0.46.0"
}

subprojects {
    group = 'feature-creeps'
    version = null

    apply plugin: 'groovy'
    apply plugin: 'io.spring.dependency-management'

    repositories {
        mavenCentral()
        maven { url 'https://repo.spring.io/milestone' }
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:2022.0.2"
            mavenBom "org.springframework.boot:spring-boot-dependencies:3.0.6"
        }
    }

    dependencies {
        // spring
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        implementation 'org.springframework.boot:spring-boot-starter-data-rest'

        // commons
        implementation 'commons-io:commons-io:2.11.0'
        implementation 'org.apache.commons:commons-lang3:3.12.0'

        // logs
        implementation 'net.logstash.logback:logstash-logback-encoder:7.3'

        // metrics
        implementation 'io.micrometer:micrometer-core'
        implementation 'io.micrometer:micrometer-observation'
        implementation 'io.micrometer:micrometer-registry-prometheus'

        // traces
        implementation 'io.micrometer:micrometer-tracing-bridge-brave'
        implementation 'io.zipkin.reporter2:zipkin-reporter-brave:2.16.4'

        // events
        implementation 'io.honeycomb.beeline:beeline-spring-boot-starter:1.7.1'

        // tests
        testImplementation 'org.springframework.boot:spring-boot-starter-test'

        // Lombok
        compileOnly 'org.projectlombok:lombok:1.18.26'
        annotationProcessor 'org.projectlombok:lombok:1.18.26'
        testCompileOnly 'org.projectlombok:lombok:1.18.26'
        testAnnotationProcessor 'org.projectlombok:lombok:1.18.26'
    }

    test {
        useJUnitPlatform()
    }

    configurations.configureEach {
        exclude group: 'junit', module: 'junit'
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

allprojects {
    task resolveDependencies {
        doLast {
            configurations.each { conf ->
                if (conf.isCanBeResolved()) {
                    conf.resolve()
                }
            }
        }
    }
}
